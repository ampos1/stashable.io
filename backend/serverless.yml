service: dolphin-backend
frameworkVersion: "=1.74.1"
custom: ${file(./variables.yml)} 
provider:
  name: aws
  runtime: python3.8
  iamRoleStatements:
    - Effect: Allow
      Action:
          - "dynamodb:PutItem"
          - "dynamodb:GetItem"
          - "dynamodb:UpdateItem"
          - "dynamodb:DeleteItem"
          - "dynamodb:BatchGetItem"
          - "dynamodb:BatchWriteItem"
          - "dynamodb:Scan"
          - "dynamodb:Query"
      Resource:
          - "arn:aws:dynamodb:us-east-1:*:*"
          
functions:
  ping:
    handler: handler.ping
    events:
      - http:
          path: ping
          method: get
          cors: true
  ping_auth:
    handler: handler.ping_auth
    events:
      - http:
          path: ping_auth
          method: get
          authorizer:
            arn: ${self:custom.cognitoUserPoolArn}
          cors: true
  get_notes:
    handler: handler.get_notes
    events:
      - http:
          path: notes
          method: get
          authorizer:
            arn: ${self:custom.cognitoUserPoolArn}
          cors: true
  create_note:
    handler: handler.create_note
    events:
      - http:
          path: notes
          method: post
          authorizer:
            arn: ${self:custom.cognitoUserPoolArn}
          cors: true
  get_note:
    handler: handler.get_note
    events:
      - http:
          path: notes/{note_id}
          method: get
          authorizer:
            arn: ${self:custom.cognitoUserPoolArn}
          cors: true
  update_note:
    handler: handler.update_note
    events:
      - http:
          path: notes/{note_id}
          method: post
          authorizer:
            arn: ${self:custom.cognitoUserPoolArn}
          cors: true
  delete_note:
    handler: handler.delete_note
    events:
      - http:
          path: notes/{note_id}
          method: delete
          authorizer:
            arn: ${self:custom.cognitoUserPoolArn}
          cors: true

plugins:
  - serverless-python-requirements
